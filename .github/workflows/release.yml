name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always
  RELEASE_NAME: musical-joycons

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: linux
            artifact_name: musicalJoycons
            asset_name: MusicalJoycons-linux-x86_64
          - os: windows-latest
            target: windows
            artifact_name: musicalJoycons.exe
            asset_name: MusicalJoycons-windows-x86_64
          - os: macos-latest
            target: macos
            artifact_name: musicalJoycons
            asset_name: MusicalJoycons-macos-x86_64

    steps:
    - uses: actions/checkout@v4
    
    - name: Install system dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libudev-dev \
          libusb-1.0-0-dev \
          pkg-config \
          libdbus-1-dev \
          libbluetooth-dev

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      
    - name: Build
      run: cargo build --release
      
    - name: Run tests
      run: cargo test --release
      
    - name: Prepare release archive
      shell: bash
      run: |
        mkdir -p "release/${{ env.RELEASE_NAME }}"
        
        # Copy executable
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          cp "target/release/${{ matrix.artifact_name }}" "release/${{ env.RELEASE_NAME }}/"
          cd release
          7z a "${{ matrix.asset_name }}.zip" "${{ env.RELEASE_NAME }}"
        else
          cp "target/release/${{ matrix.artifact_name }}" "release/${{ env.RELEASE_NAME }}/"
          chmod +x "release/${{ env.RELEASE_NAME }}/${{ matrix.artifact_name }}"
          cd release
          tar -czf "${{ matrix.asset_name }}.tar.gz" "${{ env.RELEASE_NAME }}"
        fi
        
    - name: Upload release archive
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.asset_name }}
        path: release/${{ matrix.asset_name }}.${{ matrix.os == 'windows-latest' && 'zip' || 'tar.gz' }}
        
  create_release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: MusicalJoycons-linux-x86_64
          path: release

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: MusicalJoycons-windows-x86_64
          path: release

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: MusicalJoycons-macos-x86_64
          path: release

      - name: List downloaded files
        run: ls -R release

      - name: Create Release
        uses: softprops/action-gh-release@v2.2.0
        with:
          files: |
            release/MusicalJoycons-linux-x86_64.tar.gz
            release/MusicalJoycons-windows-x86_64.zip
            release/MusicalJoycons-macos-x86_64.tar.gz
          name: "Musical Joycons ${{ env.VERSION }}"
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}